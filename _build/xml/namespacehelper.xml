<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacehelper" kind="namespace" language="Python">
    <compoundname>helper</compoundname>
    <innerclass refid="classhelper_1_1_helper" prot="public">helper::Helper</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>.. module:: helper
    :platform: ROS
    :synopsis: Class for help functions

.. moduleauthor:: Matteo Maragliano 4636216@studenti.unitge.it

This class implements an helper member that can be used in the program it is included into to simplify the code.
In particular this helper provides all the action clients used and needed to control the robot plus other functions used to retrieve information from the data and queries acquired.
It is a way to avoid the use of many global variables that could lead to some problems in the code and it also allows an easier re-use of the code.

Clients:
    :attr:`armor_client`: client to communicate with the aRMOR server. It provides the possibility to create, load, modify and save an ontology. Moreover, it is used to retrieve information about the robot position and its possibility to reach a particular location.
    
    :attr:`motion_planner`: client to communicate with the planner server. This client is used to give the sever a start an a target position and the server provides a plan of points that the robot will have to follow.
    
    :attr:`motion_controller`: client to communicate with the controller server. The client is responsible of moving the robot, so it has to give the robot the planner client points and makes it follow them to reach the target position.
</verbatim> </para>
    </detaileddescription>
    <location file="/root/ros_ws/src/EXPROBLAB_Assignment2/scripts/helper.py" line="1" column="1"/>
  </compounddef>
</doxygen>
